% Define crest and flare color palettes in a format appropriate for palettes
% library from Ben Jann. Colors adopted from https://seaborn.pydata.org.
%
% Michael L. Watson, 2021. "seaborn: statistical data visualization," Journal
% of Open Source Software 6(60): doi: 10.21105/joss.03021, 06 Apr 2021.

crest = make_map([ ...
  0xa5cd90, 0xa4cc90, 0xa3cc91, 0xa2cb91, 0xa0cb91, 0x9fca91, 0x9eca91, ...
  0x9dc991, 0x9cc891, 0x9bc891, 0x9ac791, 0x99c791, 0x98c691, 0x96c691, ...
  0x95c591, 0x94c591, 0x93c491, 0x92c491, 0x91c391, 0x90c391, 0x8fc291, ...
  0x8ec291, 0x8dc191, 0x8bc191, 0x8ac091, 0x89bf91, 0x88bf91, 0x87be91, ...
  0x86be91, 0x85bd91, 0x84bd91, 0x82bc91, 0x81bc91, 0x80bb91, 0x7fbb91, ...
  0x7eba91, 0x7dba91, 0x7cb991, 0x7bb991, 0x79b891, 0x78b891, 0x77b791, ...
  0x76b791, 0x75b690, 0x74b690, 0x73b590, 0x72b490, 0x71b490, 0x70b390, ...
  0x6fb390, 0x6eb290, 0x6db290, 0x6cb190, 0x6bb190, 0x6ab090, 0x69b090, ...
  0x68af90, 0x67ae90, 0x66ae90, 0x65ad90, 0x64ad90, 0x63ac90, 0x62ac90, ...
  0x62ab90, 0x61aa90, 0x60aa90, 0x5fa990, 0x5ea990, 0x5da890, 0x5ca890, ...
  0x5ba790, 0x5ba690, 0x5aa690, 0x59a590, 0x58a590, 0x57a490, 0x57a490, ...
  0x56a390, 0x55a290, 0x54a290, 0x53a190, 0x53a190, 0x52a090, 0x519f90, ...
  0x509f90, 0x509e90, 0x4f9e90, 0x4e9d90, 0x4e9d90, 0x4d9c90, 0x4c9b90, ...
  0x4b9b90, 0x4b9a8f, 0x4a9a8f, 0x49998f, 0x49988f, 0x48988f, 0x47978f, ...
  0x47978f, 0x46968f, 0x45958f, 0x45958f, 0x44948f, 0x43948f, 0x43938f, ...
  0x42928f, 0x41928f, 0x41918f, 0x40918f, 0x40908e, 0x3f8f8e, 0x3e8f8e, ...
  0x3e8e8e, 0x3d8e8e, 0x3c8d8e, 0x3c8c8e, 0x3b8c8e, 0x3a8b8e, 0x3a8b8e, ...
  0x398a8e, 0x388a8e, 0x38898e, 0x37888e, 0x37888d, 0x36878d, 0x35878d, ...
  0x35868d, 0x34858d, 0x33858d, 0x33848d, 0x32848d, 0x31838d, 0x31828d, ...
  0x30828d, 0x2f818d, 0x2f818d, 0x2e808d, 0x2d808c, 0x2d7f8c, 0x2c7e8c, ...
  0x2c7e8c, 0x2b7d8c, 0x2a7d8c, 0x2a7c8c, 0x297b8c, 0x287b8c, 0x287a8c, ...
  0x277a8c, 0x27798c, 0x26788c, 0x25788c, 0x25778c, 0x24778b, 0x24768b, ...
  0x23758b, 0x23758b, 0x22748b, 0x22748b, 0x21738b, 0x21728b, 0x20728b, ...
  0x20718b, 0x20718b, 0x1f708b, 0x1f6f8a, 0x1e6f8a, 0x1e6e8a, 0x1e6d8a, ...
  0x1e6d8a, 0x1d6c8a, 0x1d6c8a, 0x1d6b8a, 0x1d6a8a, 0x1d6a8a, 0x1c6989, ...
  0x1c6889, 0x1c6889, 0x1c6789, 0x1c6689, 0x1c6689, 0x1c6589, 0x1c6488, ...
  0x1c6488, 0x1c6388, 0x1d6388, 0x1d6288, 0x1d6188, 0x1d6187, 0x1d6087, ...
  0x1d5f87, 0x1d5f87, 0x1e5e87, 0x1e5d86, 0x1e5d86, 0x1e5c86, 0x1e5b86, ...
  0x1f5b86, 0x1f5a85, 0x1f5985, 0x1f5985, 0x205885, 0x205784, 0x205784, ...
  0x205684, 0x215584, 0x215583, 0x215483, 0x225383, 0x225283, 0x225282, ...
  0x225182, 0x235082, 0x235081, 0x234f81, 0x244e81, 0x244e80, 0x244d80, ...
  0x254c80, 0x254c7f, 0x254b7f, 0x254a7f, 0x26497e, 0x26497e, 0x26487e, ...
  0x27477d, 0x27477d, 0x27467c, 0x27457c, 0x28457c, 0x28447b, 0x28437b, ...
  0x28427a, 0x29427a, 0x29417a, 0x294079, 0x294079, 0x2a3f78, 0x2a3e78, ...
  0x2a3d78, 0x2a3d77, 0x2a3c77, 0x2a3b76, 0x2b3b76, 0x2b3a76, 0x2b3975, ...
  0x2b3875, 0x2b3875, 0x2b3774, 0x2b3674, 0x2c3574, 0x2c3573, 0x2c3473, ...
  0x2c3373, 0x2c3272, 0x2c3172, 0x2c3172 ...
]);

flare = make_map([ ...
  0xedb081, 0xedaf80, 0xedae7f, 0xedad7f, 0xedac7e, 0xedab7e, 0xecaa7d, ...
  0xeca97c, 0xeca87c, 0xeca77b, 0xeca67b, 0xeca57a, 0xeca479, 0xeca379, ...
  0xeca278, 0xeca178, 0xeca077, 0xec9f76, 0xeb9e76, 0xeb9d75, 0xeb9c75, ...
  0xeb9b74, 0xeb9a73, 0xeb9973, 0xeb9972, 0xeb9872, 0xeb9771, 0xea9671, ...
  0xea9570, 0xea946f, 0xea936f, 0xea926e, 0xea916e, 0xea906d, 0xea8f6c, ...
  0xea8e6c, 0xe98d6b, 0xe98c6b, 0xe98b6a, 0xe98a6a, 0xe98969, 0xe98868, ...
  0xe98768, 0xe98667, 0xe88567, 0xe88466, 0xe88366, 0xe88265, 0xe88165, ...
  0xe88064, 0xe87f64, 0xe77e63, 0xe77d63, 0xe77c63, 0xe77b62, 0xe77a62, ...
  0xe67961, 0xe67861, 0xe67760, 0xe67660, 0xe67560, 0xe5745f, 0xe5735f, ...
  0xe5725f, 0xe5715e, 0xe5705e, 0xe46f5e, 0xe46e5e, 0xe46d5d, 0xe46c5d, ...
  0xe36b5d, 0xe36a5d, 0xe3695d, 0xe3685c, 0xe2675c, 0xe2665c, 0xe2655c, ...
  0xe1645c, 0xe1635c, 0xe1625c, 0xe0615c, 0xe0605c, 0xe05f5c, 0xdf5f5c, ...
  0xdf5e5c, 0xde5d5c, 0xde5c5c, 0xde5b5c, 0xdd5a5c, 0xdd595c, 0xdc585c, ...
  0xdc575c, 0xdb565d, 0xdb565d, 0xda555d, 0xda545d, 0xd9535d, 0xd9525e, ...
  0xd8525e, 0xd7515e, 0xd7505e, 0xd64f5f, 0xd64f5f, 0xd54e5f, 0xd44d60, ...
  0xd44c60, 0xd34c60, 0xd24b60, 0xd24a61, 0xd14a61, 0xd04962, 0xd04962, ...
  0xcf4862, 0xce4763, 0xcd4763, 0xcc4663, 0xcc4664, 0xcb4564, 0xca4564, ...
  0xc94465, 0xc84465, 0xc84365, 0xc74366, 0xc64366, 0xc54266, 0xc44267, ...
  0xc34167, 0xc24167, 0xc14168, 0xc14068, 0xc04068, 0xbf4069, 0xbe3f69, ...
  0xbd3f69, 0xbc3f69, 0xbb3f6a, 0xba3e6a, 0xb93e6a, 0xb83e6b, 0xb73d6b, ...
  0xb63d6b, 0xb53d6b, 0xb43d6b, 0xb33c6c, 0xb23c6c, 0xb13c6c, 0xb13c6c, ...
  0xb03b6d, 0xaf3b6d, 0xae3b6d, 0xad3b6d, 0xac3a6d, 0xab3a6d, 0xaa3a6e, ...
  0xa93a6e, 0xa8396e, 0xa7396e, 0xa6396e, 0xa5396e, 0xa4386f, 0xa3386f, ...
  0xa2386f, 0xa1386f, 0xa1376f, 0xa0376f, 0x9f376f, 0x9e3770, 0x9d3670, ...
  0x9c3670, 0x9b3670, 0x9a3670, 0x993570, 0x983570, 0x973570, 0x963570, ...
  0x953470, 0x943470, 0x943471, 0x933471, 0x923371, 0x913371, 0x903371, ...
  0x8f3371, 0x8e3271, 0x8d3271, 0x8c3271, 0x8b3271, 0x8a3171, 0x893171, ...
  0x883171, 0x873171, 0x873171, 0x863071, 0x853071, 0x843071, 0x833070, ...
  0x822f70, 0x812f70, 0x802f70, 0x7f2f70, 0x7e2f70, 0x7d2e70, 0x7c2e70, ...
  0x7b2e70, 0x7a2e70, 0x792e6f, 0x782e6f, 0x772d6f, 0x762d6f, 0x752d6f, ...
  0x752d6f, 0x742d6e, 0x732c6e, 0x722c6e, 0x712c6e, 0x702c6e, 0x6f2c6d, ...
  0x6e2c6d, 0x6d2b6d, 0x6c2b6d, 0x6b2b6c, 0x6a2b6c, 0x692b6c, 0x682a6c, ...
  0x672a6b, 0x662a6b, 0x652a6b, 0x642a6a, 0x642a6a, 0x63296a, 0x62296a, ...
  0x612969, 0x602969, 0x5f2969, 0x5e2868, 0x5d2868, 0x5c2868, 0x5b2867, ...
  0x5a2767, 0x592767, 0x582766, 0x582766, 0x572766, 0x562666, 0x552665, ...
  0x542665, 0x532665, 0x522564, 0x512564, 0x502564, 0x4f2463, 0x4f2463, ...
  0x4e2463, 0x4d2463, 0x4c2362, 0x4b2362 ...
]);

save("crest.mat", "crest");
save("flare.mat", "flare");

%% Local functions

function rgb = hex2rgb(c)
    rgb = [ ...
        idivide(c, 256 * 256, "floor"), ...
        idivide(rem(c, 256 * 256), 256, "floor"), ...
        rem(c, 256) ...
    ];
end

function cmap = make_map(arr) 
    cmap = zeros(length(arr), 3);
    for i = 1 : length(arr)
        cmap(i, :) = double(hex2rgb(arr(i))) / 256;
    end
end

